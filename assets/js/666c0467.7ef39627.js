"use strict";(self.webpackChunkhyve_lang=self.webpackChunkhyve_lang||[]).push([[2819],{1812:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var s=t(4848),i=t(8453);const o={sidebar_position:6,description:"Enumerations in hyve"},r="Enumerations",a={id:"guide/enums",title:"Enumerations",description:"Enumerations in hyve",source:"@site/versioned_docs/version-0.0.1a/guide/enums.md",sourceDirName:"guide",slug:"/guide/enums",permalink:"/docs/0.0.1a/guide/enums",draft:!1,unlisted:!1,editUrl:"https://github.com/broken-bytes/Hyve-docs/versioned_docs/version-0.0.1a/guide/enums.md",tags:[],version:"0.0.1a",sidebarPosition:6,frontMatter:{sidebar_position:6,description:"Enumerations in hyve"},sidebar:"tutorialSidebar",previous:{title:"Functions",permalink:"/docs/0.0.1a/guide/functions"},next:{title:"Structures",permalink:"/docs/0.0.1a/guide/structs"}},c={},d=[];function u(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"enumerations",children:"Enumerations"}),"\n",(0,s.jsxs)(n.p,{children:["Enumerations provide a concise way to declare common related values. Unlike ",(0,s.jsx)(n.code,{children:"enum"})," in C, they provide scope, allow to have functions as part of them, and are generally more type safe."]}),"\n",(0,s.jsx)(n.p,{children:"An enum is defined like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hyve",children:"enum State: Int {\n    case on = 0\n    case off = 1\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"And used like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hyve",children:"var state: State = .on\n\nif state == .off {\n    ...\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"As mentioned earlier, enums may contain functions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hyve",children:'enum State {\n    case on = 0\n    case off = 1\n\n    fn string() -> String {\n        return if self == .on {\n            "ON"\n        } else {\n            "OFF"\n        }\n    }\n}\n\nvar state: State = .on\n\nprint(state.string())\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);